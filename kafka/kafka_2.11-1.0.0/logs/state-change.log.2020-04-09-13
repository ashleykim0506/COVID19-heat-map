[2020-04-09 13:06:19,694] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@311d617d, name=log4j:logger=state.change.logger (state.change.logger)
[2020-04-09 13:06:27,118] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:27,119] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:27,120] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:27,121] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:27,121] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:27,121] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:27,121] TRACE [Controller id=0 epoch=3] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:27,133] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:27,136] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-19 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,137] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:27,138] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-30 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,139] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:27,140] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-47 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,141] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:27,143] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-29 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,143] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:27,146] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-41 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,146] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:27,148] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-39 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,148] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:27,150] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-10 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,150] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:27,152] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-17 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,152] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:27,154] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-14 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,154] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:27,156] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-40 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,156] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:27,157] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-18 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,158] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:27,159] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-26 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,159] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:27,160] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-0 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,161] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:27,162] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-24 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,162] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:27,164] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-33 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,164] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:27,165] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-20 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,166] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:27,167] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-3 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,167] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:27,169] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-21 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,169] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:27,170] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-22 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,170] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:27,172] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-5 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,173] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:27,174] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-12 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,174] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:27,176] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-8 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,176] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:27,177] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-23 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,177] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:27,178] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-15 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,179] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:27,180] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-48 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,180] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:27,181] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-11 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,182] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:27,183] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-13 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,184] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:27,185] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-49 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,185] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:27,186] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-6 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,187] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:27,188] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-28 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,189] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:27,190] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-4 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,191] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:27,192] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-37 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,192] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:27,193] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-31 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,194] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:27,195] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-44 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,195] TRACE [Controller id=0 epoch=3] Started leader election for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:27,196] ERROR [Controller id=0 epoch=3] Initiated state change for partition covid19-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition covid19-0 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,196] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:27,198] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-42 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,199] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:27,200] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-34 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,201] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:27,202] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-46 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,202] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:27,204] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-25 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,204] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:27,205] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-45 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,206] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:27,207] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-27 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,207] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:27,208] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-32 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,209] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:27,209] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-43 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,210] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:27,211] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-36 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,211] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:27,212] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-35 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,212] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:27,213] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-7 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,213] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:27,214] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-9 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,214] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:27,215] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-38 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,215] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:27,216] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-1 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,217] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:27,218] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-2 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:27,218] TRACE [Controller id=0 epoch=3] Started leader election for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:27,219] ERROR [Controller id=0 epoch=3] Initiated state change for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-16 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1610)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,781] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:51,782] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:51,782] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:51,782] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:51,782] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:51,782] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:51,782] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:51,782] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:51,782] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:51,782] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:51,783] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:51,784] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:51,785] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:51,785] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:51,785] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:51,785] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:51,785] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:51,785] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:51,785] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:51,785] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:51,785] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set() for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:51,796] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:51,799] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-19 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,800] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:51,802] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-30 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,803] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:51,804] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-47 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,805] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:51,806] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-29 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,806] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:51,808] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-41 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,808] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:51,809] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-39 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,810] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:51,811] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-10 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,811] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:51,814] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-17 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,814] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:51,815] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-14 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,815] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:51,817] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-40 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,817] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:51,818] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-18 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,819] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:51,820] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-26 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,820] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:51,821] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-0 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,821] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:51,822] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-24 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,822] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:51,823] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-33 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,824] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:51,825] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-20 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,825] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:51,826] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-3 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,826] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:51,827] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-21 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,828] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:51,829] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-22 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,829] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:51,830] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-5 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,831] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:51,832] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-12 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,832] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:51,835] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-8 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,835] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:51,836] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-23 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,836] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:51,838] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-15 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,838] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:51,839] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-48 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,839] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:51,841] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-11 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,841] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:51,842] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-13 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,842] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:51,843] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-49 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,844] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:51,845] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-6 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,845] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:51,846] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-28 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,847] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:51,848] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-4 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,848] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:51,849] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-37 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,849] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:51,850] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-31 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,850] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:51,851] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-44 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,852] TRACE [Controller id=0 epoch=4] Started leader election for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:51,853] ERROR [Controller id=0 epoch=4] Initiated state change for partition covid19-0 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition covid19-0 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,853] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:51,854] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-42 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,854] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:51,855] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-34 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,856] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:51,857] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-46 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,857] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:51,858] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-25 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,858] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:51,860] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-45 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,861] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:51,862] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-27 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,862] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:51,863] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-32 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,863] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:51,864] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-43 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,864] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:51,865] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-36 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,865] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:51,866] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-35 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,867] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:51,868] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-7 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,868] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:51,869] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-9 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,869] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:51,870] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-38 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,870] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:51,871] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-1 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,871] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:51,872] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-2 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,872] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:51,873] ERROR [Controller id=0 epoch=4] Initiated state change for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica in ISR for partition __consumer_offsets-16 is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:303)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:163)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:84)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:81)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:298)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1681)
	at kafka.controller.KafkaController$Startup$.process(KafkaController.scala:1581)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:53)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:52)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2020-04-09 13:06:51,903] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:51,903] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:51,904] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:51,905] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:51,921] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,921] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,921] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,921] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,921] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-35 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,921] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,921] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,921] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-2 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,922] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-11 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,922] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-29 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,922] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,922] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,923] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,923] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-26 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,923] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,923] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-17 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,923] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,923] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,923] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,923] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-41 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,923] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-20 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-47 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,924] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-8 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-38 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-5 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,925] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,926] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition covid19-0 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,926] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-44 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,926] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,926] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,926] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,926] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,926] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,926] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-23 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,926] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-32 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Changed state of replica 0 for partition __consumer_offsets-14 from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:51,927] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:51,928] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:51,930] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:51,931] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:51,932] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:51,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,937] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition covid19-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,938] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 0 (state.change.logger)
[2020-04-09 13:06:51,943] TRACE [Controller id=0 epoch=4] Received response {error_code=0} for a request sent to broker 192.168.0.225:9092 (id: 0 rack: null) (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:51,947] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:51,948] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=0, zkVersion=1, replicas=0, isNew=false) correlation id 1 from controller 0 epoch 4 for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:51,951] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:51,952] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:51,952] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:51,960] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:51,961] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:51,961] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:51,966] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 1 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:51,975] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:51,976] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:51,976] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:51,988] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-0 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:51,991] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:51,991] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:51,991] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:51,994] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-29 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:51,999] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:52,000] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,000] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:52,001] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-48 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,009] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:52,009] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,009] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:52,010] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-10 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,018] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:52,019] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-10 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,019] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:52,020] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-45 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,027] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:52,028] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,028] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:52,029] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-26 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,030] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-7 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,036] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:52,037] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,037] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:52,037] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-42 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,044] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:52,045] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-40 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,045] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:52,046] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-4 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,053] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:52,054] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,054] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:52,055] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-23 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,056] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-1 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,063] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:52,063] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,063] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:52,063] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-20 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,065] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-39 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,072] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:52,072] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,072] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:52,073] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-17 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,081] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:52,081] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,081] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:52,081] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-36 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,083] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-14 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,090] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:52,090] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,090] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:52,091] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-33 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,092] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-49 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,099] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:52,099] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,099] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:52,100] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-11 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,101] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-30 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,107] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:52,108] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,108] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:52,108] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition covid19-0 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,115] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:52,116] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,116] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:52,116] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-46 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,118] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-27 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,124] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:52,125] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-22 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,125] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:52,125] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-8 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,134] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:52,134] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,134] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:52,135] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-24 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,142] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:52,143] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,143] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:52,143] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-43 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,144] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-5 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,152] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:52,152] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,152] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:52,153] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-21 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,161] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:52,161] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,161] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:52,162] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-2 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,163] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-40 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,169] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:52,170] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,170] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:52,170] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-37 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,177] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:52,178] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,178] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:52,178] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-18 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,179] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-34 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,186] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:52,187] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,187] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:52,187] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-15 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,189] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-12 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,195] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:52,196] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,196] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:52,196] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-31 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,203] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:52,204] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,204] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:52,204] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-9 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,205] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-47 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,213] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:52,213] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,213] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:52,213] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-19 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,214] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-28 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,221] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:52,221] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-28 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,222] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:52,222] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-38 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,223] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-35 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,230] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:52,230] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-4 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,230] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:52,231] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-44 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,232] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-6 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,238] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:52,239] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,239] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:52,239] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-25 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,240] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-16 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,246] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:52,247] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,247] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:52,247] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-22 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,248] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-41 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,255] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:52,255] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,255] TRACE [Controller id=0 epoch=4] Started leader election for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:52,256] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-32 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,263] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition covid19-0 (state.change.logger)
[2020-04-09 13:06:52,264] TRACE [Controller id=0 epoch=4] Changed partition covid19-0 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,264] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:52,264] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-3 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,265] TRACE [Broker id=0] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 1 for partition __consumer_offsets-13 (last update controller epoch 2) (state.change.logger)
[2020-04-09 13:06:52,266] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:52,266] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:52,267] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 1 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:52,277] TRACE [Controller id=0 epoch=4] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0},{topic=__consumer_offsets,partition=46,error_code=0},{topic=__consumer_offsets,partition=9,error_code=0},{topic=__consumer_offsets,partition=42,error_code=0},{topic=__consumer_offsets,partition=21,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=30,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=__consumer_offsets,partition=1,error_code=0},{topic=__consumer_offsets,partition=34,error_code=0},{topic=__consumer_offsets,partition=16,error_code=0},{topic=__consumer_offsets,partition=45,error_code=0},{topic=__consumer_offsets,partition=12,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=__consumer_offsets,partition=24,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=__consumer_offsets,partition=49,error_code=0},{topic=__consumer_offsets,partition=0,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=__consumer_offsets,partition=25,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=__consumer_offsets,partition=37,error_code=0},{topic=__consumer_offsets,partition=4,error_code=0},{topic=__consumer_offsets,partition=33,error_code=0},{topic=__consumer_offsets,partition=15,error_code=0},{topic=__consumer_offsets,partition=48,error_code=0},{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=__consumer_offsets,partition=19,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=__consumer_offsets,partition=28,error_code=0},{topic=__consumer_offsets,partition=7,error_code=0},{topic=__consumer_offsets,partition=40,error_code=0},{topic=__consumer_offsets,partition=3,error_code=0},{topic=__consumer_offsets,partition=36,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=__consumer_offsets,partition=43,error_code=0},{topic=__consumer_offsets,partition=10,error_code=0},{topic=__consumer_offsets,partition=22,error_code=0},{topic=covid19,partition=0,error_code=0},{topic=__consumer_offsets,partition=18,error_code=0},{topic=__consumer_offsets,partition=31,error_code=0},{topic=__consumer_offsets,partition=27,error_code=0},{topic=__consumer_offsets,partition=39,error_code=0},{topic=__consumer_offsets,partition=6,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker 192.168.0.225:9092 (id: 0 rack: null) (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition covid19-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,282] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=2, leader=0, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 2 (state.change.logger)
[2020-04-09 13:06:52,283] TRACE [Controller id=0 epoch=4] Received response {error_code=0} for a request sent to broker 192.168.0.225:9092 (id: 0 rack: null) (state.change.logger)
[2020-04-09 13:06:52,293] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:52,294] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,294] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:52,317] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:52,318] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-34 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,318] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:52,325] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:52,326] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-46 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,326] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:52,334] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:52,335] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,335] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:52,343] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:52,344] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,344] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:52,354] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:52,355] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,355] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:52,362] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:52,363] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,363] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:52,371] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:52,371] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,371] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:52,380] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:52,380] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,380] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:52,390] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:52,391] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,391] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:52,400] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:52,401] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,401] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:52,411] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:52,411] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,412] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:52,422] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:52,423] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,423] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:52,434] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:52,435] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,435] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:52,445] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:52,445] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,445] TRACE [Controller id=0 epoch=4] Started leader election for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:52,455] TRACE [Controller id=0 epoch=4] Elected leader 0 for Offline partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Changed partition __consumer_offsets-16 from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:52,456] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:52,457] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) to broker 0 for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:52,458] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:52,459] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:52,460] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Controller id=0 epoch=4] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) to brokers Set(0) for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:52,461] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:52,462] TRACE [Broker id=0] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=0, zkVersion=2, replicas=0, isNew=false) correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:52,463] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:52,464] TRACE [Broker id=0] Handling LeaderAndIsr request correlationId 3 from controller 0 epoch 4 starting the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:52,467] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-0 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,468] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-29 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,468] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-48 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,468] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-10 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,468] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-45 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,469] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-26 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,469] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-7 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,469] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-42 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,469] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-4 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,469] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-23 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,470] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-1 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,470] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-20 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,470] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-39 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,470] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-17 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,470] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-36 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,471] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-14 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,471] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-33 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,471] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-49 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,471] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-11 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,471] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-30 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,472] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition covid19-0 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,472] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-46 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,472] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-27 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,472] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-8 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,472] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-24 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-43 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-5 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-21 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-2 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-40 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-37 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-18 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-34 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-15 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,473] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-12 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-31 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-9 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-47 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-19 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-28 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-38 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-35 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-44 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-6 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-25 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,474] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-16 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,475] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-22 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,475] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-41 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,475] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-32 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,475] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-3 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,475] INFO [Broker id=0] Skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 4 for partition __consumer_offsets-13 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition covid19-0 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2020-04-09 13:06:52,475] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2020-04-09 13:06:52,476] TRACE [Broker id=0] Completed LeaderAndIsr request correlationId 3 from controller 0 epoch 4 for the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2020-04-09 13:06:52,477] TRACE [Controller id=0 epoch=4] Received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=13,error_code=0},{topic=__consumer_offsets,partition=46,error_code=0},{topic=__consumer_offsets,partition=9,error_code=0},{topic=__consumer_offsets,partition=42,error_code=0},{topic=__consumer_offsets,partition=21,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=30,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=__consumer_offsets,partition=1,error_code=0},{topic=__consumer_offsets,partition=34,error_code=0},{topic=__consumer_offsets,partition=16,error_code=0},{topic=__consumer_offsets,partition=45,error_code=0},{topic=__consumer_offsets,partition=12,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=__consumer_offsets,partition=24,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=__consumer_offsets,partition=49,error_code=0},{topic=__consumer_offsets,partition=0,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=__consumer_offsets,partition=25,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=__consumer_offsets,partition=37,error_code=0},{topic=__consumer_offsets,partition=4,error_code=0},{topic=__consumer_offsets,partition=33,error_code=0},{topic=__consumer_offsets,partition=15,error_code=0},{topic=__consumer_offsets,partition=48,error_code=0},{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=__consumer_offsets,partition=19,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=__consumer_offsets,partition=28,error_code=0},{topic=__consumer_offsets,partition=7,error_code=0},{topic=__consumer_offsets,partition=40,error_code=0},{topic=__consumer_offsets,partition=3,error_code=0},{topic=__consumer_offsets,partition=36,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=__consumer_offsets,partition=43,error_code=0},{topic=__consumer_offsets,partition=10,error_code=0},{topic=__consumer_offsets,partition=22,error_code=0},{topic=covid19,partition=0,error_code=0},{topic=__consumer_offsets,partition=18,error_code=0},{topic=__consumer_offsets,partition=31,error_code=0},{topic=__consumer_offsets,partition=27,error_code=0},{topic=__consumer_offsets,partition=39,error_code=0},{topic=__consumer_offsets,partition=6,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0}]} for a request sent to broker 192.168.0.225:9092 (id: 0 rack: null) (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,479] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition covid19-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,480] TRACE [Broker id=0] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=2, isr=[0], zkVersion=2, replicas=[0], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2020-04-09 13:06:52,481] TRACE [Controller id=0 epoch=4] Received response {error_code=0} for a request sent to broker 192.168.0.225:9092 (id: 0 rack: null) (state.change.logger)
